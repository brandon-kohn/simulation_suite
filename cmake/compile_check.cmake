function(CompileCheck VARIABLE DESCRIPTION SOURCE)
    if(MSVC)
        # Force warning as error to detect "noexcept" warning when exceptions are disabled:
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /WX")
    endif()
    string(MD5 hashInputs "${CMAKE_CXX_FLAGS}${SOURCE}")
    if(NOT DEFINED ${VARIABLE} OR NOT "${${VARIABLE}_HASH}" STREQUAL "${hashInputs}")
        file(WRITE ${CMAKE_BINARY_DIR}/CMakeTmp/CompileCheck.cpp "${SOURCE}\nint main() { return 0; };")
        try_compile(${VARIABLE} ${CMAKE_BINARY_DIR}/CMakeTmp ${CMAKE_BINARY_DIR}/CMakeTmp/CompileCheck.cpp OUTPUT_VARIABLE output)
        if(${VARIABLE})
            message("${DESCRIPTION} -- yes")
        else()
            message("${DESCRIPTION} -- no")
        endif()
        set(${VARIABLE} ${${VARIABLE}} CACHE INTERNAL "${DESCRIPTION}")
        set("${VARIABLE}_HASH" "${hashInputs}" CACHE INTERNAL "${DESCRIPTION} (hashed inputs)")
    endif()
endfunction()

function(CompileCheckWithFlags VARIABLE DESCRIPTION FLAGS SOURCE)
    if(MSVC)
        # Force warning as error to detect "noexcept" warning when exceptions are disabled:
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /WX")
    endif()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${FLAGS}")
    string(MD5 hashInputs "${CMAKE_CXX_FLAGS}${SOURCE}")
    if(NOT DEFINED ${VARIABLE} OR NOT "${${VARIABLE}_HASH}" STREQUAL "${hashInputs}")
        file(WRITE ${CMAKE_BINARY_DIR}/CMakeTmp/CompileCheck.cpp "${SOURCE}\nint main() { return 0; };")
        try_compile(${VARIABLE} ${CMAKE_BINARY_DIR}/CMakeTmp ${CMAKE_BINARY_DIR}/CMakeTmp/CompileCheck.cpp OUTPUT_VARIABLE output)
        if(${VARIABLE})
            message("${DESCRIPTION} -- yes")
        else()
            message("${DESCRIPTION} -- no")
        endif()
        set(${VARIABLE} ${${VARIABLE}} CACHE INTERNAL "${DESCRIPTION}")
        set("${VARIABLE}_HASH" "${hashInputs}" CACHE INTERNAL "${DESCRIPTION} (hashed inputs)")
    endif()
endfunction()

